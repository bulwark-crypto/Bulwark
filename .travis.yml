language: cpp
dist: trusty
sudo: false
branches:
  only:
  - master
cache:
  ccache: true
  directories:
  - depends/built
  - depends/sdk-sources
  - "$HOME/.ccache"
addons:
  apt:
    sources:
    - ppa:bitcoin/bitcoin
    packages:
    - autoconf
    - autotools-dev
    - binutils
    - bsdmainutils
    - build-essential
    - cmake
    - curl
    - libboost-all-dev
    - libbz2-dev
    - libcap-dev
    - libdb4.8-dev
    - libdb4.8++-dev
    - libevent-dev
    - libssl-dev
    - libtool
    - linux-libc-dev
    - miniupnpc
    - pkg-config
    - python-dev
    - python-setuptools
    - python3
    - python3-zmq
    - zlib1g-dev
env:
  global:
  - BULWARK_VERSION=1.3.1.0
  - CCACHE_COMPRESS=1
  - CCACHE_SIZE=500M
  - CCACHE_TEMPDIR=/tmp/.ccache-temp
  - MACOSPACKAGES="autoconf automake berkeley-db@4 boost@1.57 git libevent libtool miniupnpc openssl pkg-config protobuf qt zeromq librsvg"
  - MAKEJOBS="-s -j 2"
matrix:
  include:
  - name: Linux ARM 32 Bit
    addons:
      apt:
        packages:
        - g++-arm-linux-gnueabihf
        - binutils-arm-linux-gnueabihf
    env: 
      - BULWARK_CONFIG="--enable-glibc-back-compat --with-gui=no" 
      - HOST=arm-linux-gnueabihf 
      - LABEL=ARM
    os: linux
  - name: Linux i686 32 Bit
    addons:
      apt:
        packages:
        - bc
        - g++-multilib
        - libprotobuf-dev
        - libqrencode-dev
        - python3-zmq
        - qtdeclarative5-dev
    env: 
      - BULWARK_CONFIG="--enable-zmq --enable-glibc-back-compat LDFLAGS=-static-libstdc++ --with-gui=qt5" 
      - HOST=i686-pc-linux-gnu 
      - LABEL=linux32
      - PYZMQ=true 
    os: linux
  - name: Linux x86 64 Bit
    addons:
      apt:
        packages:
        - bc
        - libprotobuf-dev
        - libqrencode-dev
        - python3-zmq
        - qtdeclarative5-dev
    env: 
      - BULWARK_CONFIG="--enable-zmq --enable-glibc-back-compat --with-gui=qt5" 
      - CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_DASH_DEBUG" 
      - HOST=x86_64-pc-linux-gnu 
      - LABEL=linux64
      - PYZMQ=true 
    os: linux
  - name: Windows i686 32 Bit
    addons:
      apt:
        packages:
        - g++-mingw-w64-i686 bc
        - libprotobuf-dev
        - libqrencode-dev
        - linux-libc-dev:i386
        - nsis
        - python3
        - qtdeclarative5-dev
    env: 
      - BULWARK_CONFIG="--with-gui=qt5"
      - HOST=i686-w64-mingw32 
      - LABEL=win32
    os: linux
  - name: Windows x86 64 Bit
    addons:
      apt:
        packages:
        - bc
        - g++-mingw-w64-x86-64
        - libprotobuf-dev
        - libqrencode-dev
        - linux-libc-dev:i386
        - nsis
        - python3
        - qtdeclarative5-dev
    env: 
      - BULWARK_CONFIG="--with-gui=qt5"
      - HOST=x86_64-w64-mingw32 
      - LABEL=win64
    os: linux
  - name: macOS x86 64 Bit
    env: 
      - HOST=x86_64-apple-darwin
      - LABEL=macOS
    os: osx
    osx_image: xcode9.2
before_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
    brew update; 
  fi
install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
    brew uninstall mercurial python; 
    brew install $MACOSPACKAGES; 
    brew link --overwrite --force boost@1.57; 
  fi
- if [ "$PYZMQ" = "true" ]; then 
    pip install pyzmq --user ; 
  fi
before_script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
    unset CC CXX DISPLAY; 
  fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
    export LDFLAGS=-L/usr/local/opt/openssl/lib;
    export CPPFLAGS=-I/usr/local/opt/openssl/include; 
  fi
- GLOBAL_CONFIG="--enable-reduce-exports --enable-tests --prefix=$TRAVIS_BUILD_DIR/depends/$HOST"
script:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
    make $MAKEJOBS -C depends HOST="$HOST";
    depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE; sh ./autogen.sh;
    ./configure --cache-file=config.cache $GLOBAL_CONFIG $BULWARK_CONFIG; 
    make; 
  fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
    sh ./autogen.sh; 
    ./configure --enable-reduce-exports;
    make deploy; 
  fi
before_deploy:
- find . -name "bulwark-*"
- mkdir -p $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION
- mkdir $TRAVIS_BUILD_DIR/deploy
- if [[ $HOST =~ linux ]]; then 
    cp $TRAVIS_BUILD_DIR/src/bulwark-cli $TRAVIS_BUILD_DIR/src/bulwark-tx $TRAVIS_BUILD_DIR/src/bulwarkd $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION;
    if [[ -f $TRAVIS_BUILD_DIR/src/qt/bulwark-qt ]]; then 
      cp $TRAVIS_BUILD_DIR/src/qt/bulwark-qt $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION; 
    fi;
    if command -v arm-linux-gnueabihf-strip; then 
      arm-linux-gnueabihf-strip -s $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION/*;
    else 
      strip -s $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION/*; 
    fi; 
    cd $TRAVIS_BUILD_DIR/stage && tar czf bulwark-$BULWARK_VERSION-$LABEL.tar.gz ./bulwark-$BULWARK_VERSION && cd $TRAVIS_BUILD_DIR;
    mv $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION-$LABEL.tar.gz $TRAVIS_BUILD_DIR/deploy/;
  fi
- if [[ $HOST =~ mingw32 ]]; then 
    cp $TRAVIS_BUILD_DIR/src/bulwark-cli.exe $TRAVIS_BUILD_DIR/src/bulwark-tx.exe $TRAVIS_BUILD_DIR/src/bulwarkd.exe $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION;
    if [[ -f $TRAVIS_BUILD_DIR/src/qt/bulwark-qt.exe ]]; then 
      cp $TRAVIS_BUILD_DIR/src/qt/bulwark-qt.exe $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION; 
    fi; 
    cd $TRAVIS_BUILD_DIR/stage && zip bulwark-$BULWARK_VERSION-$LABEL.zip ./bulwark-$BULWARK_VERSION/* && cd $TRAVIS_BUILD_DIR; 
    mv $TRAVIS_BUILD_DIR/stage/bulwark-$BULWARK_VERSION-$LABEL.zip $TRAVIS_BUILD_DIR/deploy/;
    ls -la $TRAVIS_BUILD_DIR/deploy;
  fi
- if [[ $HOST =~ apple ]]; then 
    mv $TRAVIS_BUILD_DIR/Bulwark-Qt.dmg $TRAVIS_BUILD_DIR/deploy/bulwark-$BULWARK_VERSION-$LABEL.dmg;
  fi
deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: Y2LVAsvudAQNBES3Pu+IcvgNaizkwG7phczFKR645UamWGlMbezMfEoXxj3PsYsBJMPc+zap0P8S2xbtzXakKffqx3EIhaKk8q2G3qpxLFP59VN2mba6ETtVJQVS/s3LKEwaTrbC0/A1TworHpyfxrRN2wTxHv8oej/yKr7HrICJeIPCNsB7ElP79x//hS62tJIVoVMUFOqkShqnl1wJOE36/xR44hiZQEbsaiQqIlVYhvY4BZMpybRhKmDrSlAduTE8GyNyg+6KJL1V+euRcm3oNC9EiFqjzDeb7CH+7m6Jc7z0CCOPpF4REPdd/asdp7fHOIzv6oTWFSiwPZijo6R9ajiAO75OZP2qKZZKBjkV2cWM9jbcGsJhwJPHURHWwd7LA3E71eTGz8QhrFyP92pZ7HFG5P827TcGi07B9yVbpop870B5Dnb+oD2eqSoZsq/xKq3uu2PE7DI+1gE19jCLXw47EiA78fllcsK00IkSS4y8Gcm7FE1NUzHgB+/U60ZjOfOX6f3DkHeWh5HtaK81YijDHPgtBwiR1zyJHlqM2FKmPN7eVVjxq4fbE442URrqn7Sak+u1KmbR6X16coDqObvguHPUDKI/R9r9qfBN6w+x2Xt/0aHm4UlenibDqwi4oJPHLYEZIwd5jR7g+jJifSrnGLmSHYqJlAy1Xbo=
  file_glob: true
  file: deploy/*
  name: "travis-${TRAVIS_BUILD_NUMBER}" 
  tag_name: "travis-${TRAVIS_BRANCH}"
  on:
    all_branches: true
